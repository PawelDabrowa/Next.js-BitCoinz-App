{"ast":null,"code":"var _jsxFileName = \"/Users/fox/Documents/Next/bitcoin-app/pages/canvas.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component, createRef } from 'react';\nimport { ScrollableCanvas } from './react-scrollable-canvas';\nconst WIDTH = 300;\nconst HEIGHT = 300;\nconst LARGE_WIDTH = 600;\nconst LARGE_HEIGHT = 600;\nconst CIRCLE_RADIUS = 5;\nconst CIRCLE_SIZE = 30;\nexport default class ScrollableCanvasExample extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"canvasRef\", /*#__PURE__*/createRef());\n\n    _defineProperty(this, \"ctx\", null);\n\n    _defineProperty(this, \"draw\", (scrollTop, scrollLeft) => {\n      // draw canvas here.\n      this.ctx.clearRect(0, 0, WIDTH, HEIGHT);\n\n      for (let y = -scrollTop % CIRCLE_SIZE; y < HEIGHT - scrollTop % CIRCLE_SIZE; y += CIRCLE_SIZE) {\n        for (let x = -scrollLeft % CIRCLE_SIZE; x < WIDTH - scrollLeft % CIRCLE_SIZE; x += CIRCLE_SIZE) {\n          this.ctx.beginPath();\n          this.ctx.arc(x + CIRCLE_SIZE / 2, y + CIRCLE_SIZE / 2, CIRCLE_RADIUS, 0, 360, false);\n          this.ctx.fillStyle = `rgba(${(scrollLeft + x) / 2}, ${(scrollTop + y) / 2}, 128, 0.8)`;\n          this.ctx.fill();\n        }\n      }\n    });\n  }\n\n  componentDidMount() {\n    this.ctx = this.canvasRef.current.getContext('2d');\n    this.draw(0, 0);\n  }\n\n  render() {\n    return __jsx(ScrollableCanvas, {\n      width: WIDTH,\n      height: HEIGHT,\n      largeWidth: LARGE_WIDTH,\n      largeHeight: LARGE_HEIGHT,\n      canvasRef: this.canvasRef,\n      onScroll: this.draw,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/fox/Documents/Next/bitcoin-app/pages/canvas.js"],"names":["React","Component","createRef","ScrollableCanvas","WIDTH","HEIGHT","LARGE_WIDTH","LARGE_HEIGHT","CIRCLE_RADIUS","CIRCLE_SIZE","ScrollableCanvasExample","scrollTop","scrollLeft","ctx","clearRect","y","x","beginPath","arc","fillStyle","fill","componentDidMount","canvasRef","current","getContext","draw","render"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,SAA3B,QAA4C,OAA5C;AACA,SAASC,gBAAT,QAAiC,2BAAjC;AAEA,MAAMC,KAAK,GAAG,GAAd;AACA,MAAMC,MAAM,GAAG,GAAf;AACA,MAAMC,WAAW,GAAG,GAApB;AACA,MAAMC,YAAY,GAAG,GAArB;AACA,MAAMC,aAAa,GAAG,CAAtB;AACA,MAAMC,WAAW,GAAG,EAApB;AAEA,eAAe,MAAMC,uBAAN,SAAsCT,SAAtC,CAAgD;AAAA;AAAA;;AAAA,oDACjDC,SAAS,EADwC;;AAAA,iCAEvD,IAFuD;;AAAA,kCAItD,CAACS,SAAD,EAAYC,UAAZ,KAA2B;AAChC;AACA,WAAKC,GAAL,CAASC,SAAT,CAAmB,CAAnB,EAAsB,CAAtB,EAAyBV,KAAzB,EAAgCC,MAAhC;;AACA,WAAK,IAAIU,CAAC,GAAG,CAACJ,SAAD,GAAaF,WAA1B,EAAuCM,CAAC,GAAGV,MAAM,GAAIM,SAAS,GAAGF,WAAjE,EAA+EM,CAAC,IAAIN,WAApF,EAAiG;AAC/F,aAAK,IAAIO,CAAC,GAAG,CAACJ,UAAD,GAAcH,WAA3B,EAAwCO,CAAC,GAAGZ,KAAK,GAAIQ,UAAU,GAAGH,WAAlE,EAAgFO,CAAC,IAAIP,WAArF,EAAkG;AAChG,eAAKI,GAAL,CAASI,SAAT;AACA,eAAKJ,GAAL,CAASK,GAAT,CAAaF,CAAC,GAAGP,WAAW,GAAG,CAA/B,EAAkCM,CAAC,GAAGN,WAAW,GAAG,CAApD,EAAuDD,aAAvD,EAAsE,CAAtE,EAAyE,GAAzE,EAA8E,KAA9E;AACA,eAAKK,GAAL,CAASM,SAAT,GAAsB,QAAO,CAACP,UAAU,GAAGI,CAAd,IAAmB,CAAE,KAAI,CAACL,SAAS,GAAGI,CAAb,IAAkB,CAAE,aAA1E;AACA,eAAKF,GAAL,CAASO,IAAT;AACD;AACF;AACF,KAf4D;AAAA;;AAiB7DC,EAAAA,iBAAiB,GAAG;AAClB,SAAKR,GAAL,GAAW,KAAKS,SAAL,CAAeC,OAAf,CAAuBC,UAAvB,CAAkC,IAAlC,CAAX;AACA,SAAKC,IAAL,CAAU,CAAV,EAAa,CAAb;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,WACE,MAAC,gBAAD;AACE,MAAA,KAAK,EAAEtB,KADT;AAEE,MAAA,MAAM,EAAEC,MAFV;AAGE,MAAA,UAAU,EAAEC,WAHd;AAIE,MAAA,WAAW,EAAEC,YAJf;AAKE,MAAA,SAAS,EAAE,KAAKe,SALlB;AAME,MAAA,QAAQ,EAAE,KAAKG,IANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAUD;;AAjC4D","sourcesContent":["import React, { Component, createRef } from 'react';\nimport { ScrollableCanvas } from './react-scrollable-canvas';\n\nconst WIDTH = 300;\nconst HEIGHT = 300;\nconst LARGE_WIDTH = 600;\nconst LARGE_HEIGHT = 600;\nconst CIRCLE_RADIUS = 5;\nconst CIRCLE_SIZE = 30;\n\nexport default class ScrollableCanvasExample extends Component {\n  canvasRef = createRef();\n  ctx = null;\n\n  draw = (scrollTop, scrollLeft) => {\n    // draw canvas here.\n    this.ctx.clearRect(0, 0, WIDTH, HEIGHT);\n    for (let y = -scrollTop % CIRCLE_SIZE; y < HEIGHT - (scrollTop % CIRCLE_SIZE); y += CIRCLE_SIZE) {\n      for (let x = -scrollLeft % CIRCLE_SIZE; x < WIDTH - (scrollLeft % CIRCLE_SIZE); x += CIRCLE_SIZE) {\n        this.ctx.beginPath();\n        this.ctx.arc(x + CIRCLE_SIZE / 2, y + CIRCLE_SIZE / 2, CIRCLE_RADIUS, 0, 360, false);\n        this.ctx.fillStyle = `rgba(${(scrollLeft + x) / 2}, ${(scrollTop + y) / 2}, 128, 0.8)`;\n        this.ctx.fill();\n      }\n    }\n  };\n\n  componentDidMount() {\n    this.ctx = this.canvasRef.current.getContext('2d');\n    this.draw(0, 0);\n  }\n\n  render() {\n    return (\n      <ScrollableCanvas\n        width={WIDTH}\n        height={HEIGHT}\n        largeWidth={LARGE_WIDTH}\n        largeHeight={LARGE_HEIGHT}\n        canvasRef={this.canvasRef}\n        onScroll={this.draw}\n      />\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}