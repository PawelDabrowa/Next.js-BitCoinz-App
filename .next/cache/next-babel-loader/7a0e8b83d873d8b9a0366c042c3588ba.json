{"ast":null,"code":"var _jsxFileName = \"/Users/fox/Documents/Next/bitcoin-app/pages/canvas.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"progressBar\", () => {\n      const scrollTotal = document.documentElement.scrollTop;\n      const heightWin = document.documentElement.scrollHeight - document.documentElement.clientHeight;\n      const scroll = `${scrollTotal / heightWin * 100}%`;\n      this.setState({\n        scroll: scroll\n      });\n    });\n\n    this.state = {\n      scroll: 0\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"scroll\", this.progressBar);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"scroll\", this.progressBar);\n  }\n\n  render() {\n    const progressMainWrapper = {\n      background: \"rgba(255, 255, 255, 0.14)\",\n      height: \"15px\",\n      position: \"fixed\",\n      top: 0,\n      left: 0,\n      zIndex: 101,\n      width: \"100%\"\n    };\n    const progressMainStyle = {\n      height: \"15px\",\n      background: \"#00cc83\",\n      width: this.state.scroll\n    };\n    return __jsx(\"div\", {\n      className: \"progress-bar\",\n      style: progressMainWrapper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }, __jsx(\"div\", {\n      style: progressMainStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/fox/Documents/Next/bitcoin-app/pages/canvas.js"],"names":["React","App","Component","constructor","props","scrollTotal","document","documentElement","scrollTop","heightWin","scrollHeight","clientHeight","scroll","setState","state","componentDidMount","window","addEventListener","progressBar","componentWillUnmount","removeEventListener","render","progressMainWrapper","background","height","position","top","left","zIndex","width","progressMainStyle"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,GAAN,SAAkBD,KAAK,CAACE,SAAxB,CAAkC;AAEhCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,yCAeL,MAAM;AAClB,YAAMC,WAAW,GAAGC,QAAQ,CAACC,eAAT,CAAyBC,SAA7C;AACA,YAAMC,SAAS,GAAGH,QAAQ,CAACC,eAAT,CAAyBG,YAAzB,GAAwCJ,QAAQ,CAACC,eAAT,CAAyBI,YAAnF;AACA,YAAMC,MAAM,GAAI,GAAEP,WAAW,GAAGI,SAAd,GAA0B,GAAI,GAAhD;AAEA,WAAKI,QAAL,CAAc;AACZD,QAAAA,MAAM,EAAEA;AADI,OAAd;AAGD,KAvBkB;;AAEjB,SAAKE,KAAL,GAAa;AACXF,MAAAA,MAAM,EAAE;AADG,KAAb;AAGD;;AAEDG,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkC,KAAKC,WAAvC;AACD;;AAEDC,EAAAA,oBAAoB,GAAG;AACrBH,IAAAA,MAAM,CAACI,mBAAP,CAA2B,QAA3B,EAAqC,KAAKF,WAA1C;AACD;;AAYDG,EAAAA,MAAM,GAAG;AACP,UAAMC,mBAAmB,GAAG;AAC1BC,MAAAA,UAAU,EAAE,2BADc;AAE1BC,MAAAA,MAAM,EAAE,MAFkB;AAG1BC,MAAAA,QAAQ,EAAE,OAHgB;AAI1BC,MAAAA,GAAG,EAAE,CAJqB;AAK1BC,MAAAA,IAAI,EAAE,CALoB;AAM1BC,MAAAA,MAAM,EAAE,GANkB;AAO1BC,MAAAA,KAAK,EAAE;AAPmB,KAA5B;AAUA,UAAMC,iBAAiB,GAAG;AACxBN,MAAAA,MAAM,EAAE,MADgB;AAExBD,MAAAA,UAAU,EAAE,SAFY;AAGxBM,MAAAA,KAAK,EAAE,KAAKf,KAAL,CAAWF;AAHM,KAA1B;AAMA,WACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAA8B,MAAA,KAAK,EAAEU,mBAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,KAAK,EAAEQ,iBAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADJ;AAKD;;AAjD+B;;AAoDlC,eAAe7B,GAAf","sourcesContent":["import React from 'react';\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      scroll: 0\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"scroll\", this.progressBar);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"scroll\", this.progressBar);\n  }\n\n  progressBar = () => {\n    const scrollTotal = document.documentElement.scrollTop;\n    const heightWin = document.documentElement.scrollHeight - document.documentElement.clientHeight;\n    const scroll = `${scrollTotal / heightWin * 100}%`;\n\n    this.setState({\n      scroll: scroll\n    });\n  };\n\n  render() {\n    const progressMainWrapper = {\n      background: \"rgba(255, 255, 255, 0.14)\",\n      height: \"15px\",\n      position: \"fixed\",\n      top: 0,\n      left: 0,\n      zIndex: 101,\n      width: \"100%\"\n    };\n\n    const progressMainStyle = {\n      height: \"15px\",\n      background: \"#00cc83\",\n      width: this.state.scroll\n    };\n\n    return (\n        <div className=\"progress-bar\" style={progressMainWrapper}>\n          <div style={progressMainStyle} />\n        </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}