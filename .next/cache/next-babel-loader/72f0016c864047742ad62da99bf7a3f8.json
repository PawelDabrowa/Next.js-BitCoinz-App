{"ast":null,"code":"var _jsxFileName = \"/Users/fox/Documents/Next/bitcoin-app/pages/progressbar.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport React, { useState, useLayoutEffect, useRef } from \"react\";\nimport { CheckMark, Close } from \"../components/icons\";\n\nfunction App() {\n  const {\n    0: progress,\n    1: setProgress\n  } = useState(0);\n  const articleRef = useRef();\n  useLayoutEffect(() => {\n    const updateHeight = () => {\n      if (!articleRef.current) return;\n      const {\n        height\n      } = articleRef.current.getBoundingClientRect();\n      setProgress(window.scrollY / (height - window.innerHeight));\n    };\n\n    updateHeight();\n    window.addEventListener(\"scroll\", updateHeight);\n    return () => {\n      window.removeEventListener(\"scroll\", updateHeight);\n    };\n  }, []);\n  const position = Math.max(1 - progress, 0);\n  const complete = position === 0;\n  const notMoved = position === 1; // Radius is derived from our desired strokeWidth\n  // If radius is exactly half diameter then the stroke will sit right on the edge and expand in both directions\n  // We want it to sit on the inside so we need to do some offset. So half the stroke width we need to subtract from the radius\n  // If we wanted it on the outside we could add the stroke width but then you'll need to adjust your circle size to be that much larger\n\n  const DIAMETER = 50;\n  const STROKE_WIDTH = 6;\n  const RADIUS = DIAMETER / 2 - STROKE_WIDTH / 2;\n  const CIRCUMFERENCE = Math.PI * RADIUS * 2;\n  return __jsx(\"div\", {\n    className: \"jsx-2925289270\" + \" \" + \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    ref: articleRef,\n    className: \"jsx-2925289270\" + \" \" + \"article\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    style: {\n      position: \"fixed\",\n      top: '50px',\n      left: '50px'\n    },\n    className: \"jsx-2925289270\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, __jsx(\"button\", {\n    style: {\n      backgroundColor: complete ? \"tomato\" : \"#FFF\"\n    },\n    className: \"jsx-2925289270\" + \" \" + \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, complete ? __jsx(CheckMark, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 25\n    }\n  }) : __jsx(Close, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 41\n    }\n  }), !notMoved && __jsx(\"svg\", {\n    viewBox: \"0 0 200 200\",\n    width: \"900px\",\n    height: \"900px\",\n    className: \"jsx-2925289270\" + \" \" + \"circle-progress\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }\n  }, __jsx(\"circle\", {\n    cx: DIAMETER / 2,\n    cy: DIAMETER / 2,\n    r: RADIUS,\n    stroke: \"tomato\",\n    fill: \"transparent\",\n    strokeWidth: STROKE_WIDTH,\n    style: {\n      strokeDasharray: CIRCUMFERENCE,\n      strokeDashoffset: CIRCUMFERENCE * position\n    },\n    className: \"jsx-2925289270\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }))))), __jsx(_JSXStyle, {\n    id: \"2925289270\",\n    __self: this\n  }, \".center-icon.jsx-2925289270{position:absolute;top:50%;left:50%;-webkit-transform:translate(-50%,-50%);-ms-transform:translate(-50%,-50%);transform:translate(-50%,-50%);}.article.jsx-2925289270{height:600vh;background:linear-gradient(to bottom,#1e5799 0%,#7db9e8 100%);}.button.jsx-2925289270{position:relative;width:100px;height:100px;border-radius:50px;-webkit-transition:all 0.3s ease;transition:all 0.3s ease;box-shadow:0 2px 4px 0 rgba(0,0,0,0.2);outline:none;cursor:pointer;border:0;background-color:#fff;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}.circle-progress.jsx-2925289270{position:absolute;left:50;top:0;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9mb3gvRG9jdW1lbnRzL05leHQvYml0Y29pbi1hcHAvcGFnZXMvcHJvZ3Jlc3NiYXIuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBOEVrQixBQUkyQixBQU9MLEFBS0ssQUFnQkEsYUFwQjhDLEtBUHhELEFBWUksQUFnQkosUUEzQkMsQUE0QkgsSUFoQk8sRUFpQmYsR0E1QmtDLFFBWWIsbUJBQ00sYUFQM0IsNkNBUTRDLG9CQWI1QyxtQkFjZSxhQUNFLGVBQ04sU0FDYSxzQkFDVCwwRUFDVSxtR0FDSiw2RkFDckIiLCJmaWxlIjoiL1VzZXJzL2ZveC9Eb2N1bWVudHMvTmV4dC9iaXRjb2luLWFwcC9wYWdlcy9wcm9ncmVzc2Jhci5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyB1c2VTdGF0ZSwgdXNlTGF5b3V0RWZmZWN0LCB1c2VSZWYgfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IENoZWNrTWFyaywgQ2xvc2UgfSBmcm9tIFwiLi4vY29tcG9uZW50cy9pY29uc1wiO1xuXG5mdW5jdGlvbiBBcHAoKSB7XG4gIGNvbnN0IFtwcm9ncmVzcywgc2V0UHJvZ3Jlc3NdID0gdXNlU3RhdGUoMCk7XG4gIGNvbnN0IGFydGljbGVSZWYgPSB1c2VSZWYoKTtcblxuICB1c2VMYXlvdXRFZmZlY3QoKCkgPT4ge1xuICAgIGNvbnN0IHVwZGF0ZUhlaWdodCA9ICgpID0+IHtcbiAgICAgIGlmICghYXJ0aWNsZVJlZi5jdXJyZW50KSByZXR1cm47XG5cbiAgICAgIGNvbnN0IHsgaGVpZ2h0IH0gPSBhcnRpY2xlUmVmLmN1cnJlbnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG5cbiAgICAgIHNldFByb2dyZXNzKHdpbmRvdy5zY3JvbGxZIC8gKGhlaWdodCAtIHdpbmRvdy5pbm5lckhlaWdodCkpO1xuICAgIH07XG5cbiAgICB1cGRhdGVIZWlnaHQoKTtcblxuICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwic2Nyb2xsXCIsIHVwZGF0ZUhlaWdodCk7XG4gICAgcmV0dXJuICgpID0+IHtcbiAgICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKFwic2Nyb2xsXCIsIHVwZGF0ZUhlaWdodCk7XG4gICAgfTtcbiAgfSwgW10pO1xuXG4gIGNvbnN0IHBvc2l0aW9uID0gTWF0aC5tYXgoMSAtIHByb2dyZXNzLCAwKTtcbiAgY29uc3QgY29tcGxldGUgPSBwb3NpdGlvbiA9PT0gMDtcbiAgY29uc3Qgbm90TW92ZWQgPSBwb3NpdGlvbiA9PT0gMTtcblxuICAvLyBSYWRpdXMgaXMgZGVyaXZlZCBmcm9tIG91ciBkZXNpcmVkIHN0cm9rZVdpZHRoXG4gIC8vIElmIHJhZGl1cyBpcyBleGFjdGx5IGhhbGYgZGlhbWV0ZXIgdGhlbiB0aGUgc3Ryb2tlIHdpbGwgc2l0IHJpZ2h0IG9uIHRoZSBlZGdlIGFuZCBleHBhbmQgaW4gYm90aCBkaXJlY3Rpb25zXG4gIC8vIFdlIHdhbnQgaXQgdG8gc2l0IG9uIHRoZSBpbnNpZGUgc28gd2UgbmVlZCB0byBkbyBzb21lIG9mZnNldC4gU28gaGFsZiB0aGUgc3Ryb2tlIHdpZHRoIHdlIG5lZWQgdG8gc3VidHJhY3QgZnJvbSB0aGUgcmFkaXVzXG4gIC8vIElmIHdlIHdhbnRlZCBpdCBvbiB0aGUgb3V0c2lkZSB3ZSBjb3VsZCBhZGQgdGhlIHN0cm9rZSB3aWR0aCBidXQgdGhlbiB5b3UnbGwgbmVlZCB0byBhZGp1c3QgeW91ciBjaXJjbGUgc2l6ZSB0byBiZSB0aGF0IG11Y2ggbGFyZ2VyXG4gIGNvbnN0IERJQU1FVEVSID0gNTA7XG4gIGNvbnN0IFNUUk9LRV9XSURUSCA9IDY7XG4gIGNvbnN0IFJBRElVUyA9IERJQU1FVEVSIC8gMiAtIFNUUk9LRV9XSURUSCAvIDI7XG4gIGNvbnN0IENJUkNVTUZFUkVOQ0UgPSBNYXRoLlBJICogUkFESVVTICogMjtcblxuICByZXR1cm4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPVwiQXBwXCI+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cImFydGljbGVcIiByZWY9e2FydGljbGVSZWZ9PlxuICAgICAgICA8ZGl2XG4gICAgICAgICAgc3R5bGU9e3tcbiAgICAgICAgICAgIHBvc2l0aW9uOiBcImZpeGVkXCIsXG4gICAgICAgICAgICB0b3A6ICc1MHB4JyxcbiAgICAgICAgICAgIGxlZnQ6ICc1MHB4JyxcbiAgICAgICAgICB9fVxuICAgICAgICA+XG4gICAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgY2xhc3NOYW1lPVwiYnV0dG9uXCJcbiAgICAgICAgICAgIHN0eWxlPXt7XG4gICAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogY29tcGxldGUgPyBcInRvbWF0b1wiIDogXCIjRkZGXCJcbiAgICAgICAgICAgIH19XG4gICAgICAgICAgPlxuICAgICAgICAgICAge2NvbXBsZXRlID8gPENoZWNrTWFyayAvPiA6IDxDbG9zZSAvPn1cbiAgICAgICAgICAgIHshbm90TW92ZWQgJiYgKFxuICAgICAgICAgICAgICA8c3ZnXG4gICAgICAgICAgICAgICAgdmlld0JveD1cIjAgMCAyMDAgMjAwXCJcbiAgICAgICAgICAgICAgICB3aWR0aD1cIjkwMHB4XCJcbiAgICAgICAgICAgICAgICBoZWlnaHQ9XCI5MDBweFwiXG4gICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiY2lyY2xlLXByb2dyZXNzXCJcbiAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgIDxjaXJjbGVcbiAgICAgICAgICAgICAgICAgIGN4PXtESUFNRVRFUiAvIDJ9XG4gICAgICAgICAgICAgICAgICBjeT17RElBTUVURVIgLyAyfVxuICAgICAgICAgICAgICAgICAgcj17UkFESVVTfVxuICAgICAgICAgICAgICAgICAgc3Ryb2tlPVwidG9tYXRvXCJcbiAgICAgICAgICAgICAgICAgIGZpbGw9XCJ0cmFuc3BhcmVudFwiXG4gICAgICAgICAgICAgICAgICBzdHJva2VXaWR0aD17U1RST0tFX1dJRFRIfVxuICAgICAgICAgICAgICAgICAgc3R5bGU9e3tcbiAgICAgICAgICAgICAgICAgICAgc3Ryb2tlRGFzaGFycmF5OiBDSVJDVU1GRVJFTkNFLFxuICAgICAgICAgICAgICAgICAgICBzdHJva2VEYXNob2Zmc2V0OiBDSVJDVU1GRVJFTkNFICogcG9zaXRpb25cbiAgICAgICAgICAgICAgICAgIH19XG4gICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgPC9zdmc+XG4gICAgICAgICAgICApfVxuICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgICAgPHN0eWxlIGpzeD57YFxuXG4gICAgICAuY2VudGVyLWljb24ge1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIHRvcDogNTAlO1xuICAgICAgICBsZWZ0OiA1MCU7XG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xuICAgICAgfVxuXG4gICAgICAuYXJ0aWNsZSB7XG4gICAgICAgIGhlaWdodDogNjAwdmg7XG4gICAgICAgIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCh0byBib3R0b20sICMxZTU3OTkgMCUsICM3ZGI5ZTggMTAwJSk7XG4gICAgICB9XG5cbiAgICAgIC5idXR0b24ge1xuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgIHdpZHRoOiAxMDBweDtcbiAgICAgICAgaGVpZ2h0OiAxMDBweDtcbiAgICAgICAgYm9yZGVyLXJhZGl1czogNTBweDtcbiAgICAgICAgdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZTtcbiAgICAgICAgYm94LXNoYWRvdzogMCAycHggNHB4IDAgcmdiYSgwLCAwLCAwLCAwLjIpO1xuICAgICAgICBvdXRsaW5lOiBub25lO1xuICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgICAgIGJvcmRlcjogMDtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICB9XG5cbiAgICAgIC5jaXJjbGUtcHJvZ3Jlc3Mge1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIGxlZnQ6IDUwO1xuICAgICAgICB0b3A6IDA7XG4gICAgICB9XG4gICAgYH08L3N0eWxlPlxuICAgIDwvZGl2PlxuICApO1xufVxuXG5leHBvcnQgZGVmYXVsdCBBcHA7XG4iXX0= */\\n/*@ sourceURL=/Users/fox/Documents/Next/bitcoin-app/pages/progressbar.js */\"));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/fox/Documents/Next/bitcoin-app/pages/progressbar.js"],"names":["React","useState","useLayoutEffect","useRef","CheckMark","Close","App","progress","setProgress","articleRef","updateHeight","current","height","getBoundingClientRect","window","scrollY","innerHeight","addEventListener","removeEventListener","position","Math","max","complete","notMoved","DIAMETER","STROKE_WIDTH","RADIUS","CIRCUMFERENCE","PI","top","left","backgroundColor","strokeDasharray","strokeDashoffset"],"mappings":"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","sourcesContent":["import React, { useState, useLayoutEffect, useRef } from \"react\";\nimport { CheckMark, Close } from \"../components/icons\";\n\nfunction App() {\n  const [progress, setProgress] = useState(0);\n  const articleRef = useRef();\n\n  useLayoutEffect(() => {\n    const updateHeight = () => {\n      if (!articleRef.current) return;\n\n      const { height } = articleRef.current.getBoundingClientRect();\n\n      setProgress(window.scrollY / (height - window.innerHeight));\n    };\n\n    updateHeight();\n\n    window.addEventListener(\"scroll\", updateHeight);\n    return () => {\n      window.removeEventListener(\"scroll\", updateHeight);\n    };\n  }, []);\n\n  const position = Math.max(1 - progress, 0);\n  const complete = position === 0;\n  const notMoved = position === 1;\n\n  // Radius is derived from our desired strokeWidth\n  // If radius is exactly half diameter then the stroke will sit right on the edge and expand in both directions\n  // We want it to sit on the inside so we need to do some offset. So half the stroke width we need to subtract from the radius\n  // If we wanted it on the outside we could add the stroke width but then you'll need to adjust your circle size to be that much larger\n  const DIAMETER = 50;\n  const STROKE_WIDTH = 6;\n  const RADIUS = DIAMETER / 2 - STROKE_WIDTH / 2;\n  const CIRCUMFERENCE = Math.PI * RADIUS * 2;\n\n  return (\n    <div className=\"App\">\n      <div className=\"article\" ref={articleRef}>\n        <div\n          style={{\n            position: \"fixed\",\n            top: '50px',\n            left: '50px',\n          }}\n        >\n          <button\n            className=\"button\"\n            style={{\n              backgroundColor: complete ? \"tomato\" : \"#FFF\"\n            }}\n          >\n            {complete ? <CheckMark /> : <Close />}\n            {!notMoved && (\n              <svg\n                viewBox=\"0 0 200 200\"\n                width=\"900px\"\n                height=\"900px\"\n                className=\"circle-progress\"\n              >\n                <circle\n                  cx={DIAMETER / 2}\n                  cy={DIAMETER / 2}\n                  r={RADIUS}\n                  stroke=\"tomato\"\n                  fill=\"transparent\"\n                  strokeWidth={STROKE_WIDTH}\n                  style={{\n                    strokeDasharray: CIRCUMFERENCE,\n                    strokeDashoffset: CIRCUMFERENCE * position\n                  }}\n                />\n              </svg>\n            )}\n          </button>\n        </div>\n      </div>\n      <style jsx>{`\n\n      .center-icon {\n        position: absolute;\n        top: 50%;\n        left: 50%;\n        transform: translate(-50%, -50%);\n      }\n\n      .article {\n        height: 600vh;\n        background: linear-gradient(to bottom, #1e5799 0%, #7db9e8 100%);\n      }\n\n      .button {\n        position: relative;\n        width: 100px;\n        height: 100px;\n        border-radius: 50px;\n        transition: all 0.3s ease;\n        box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.2);\n        outline: none;\n        cursor: pointer;\n        border: 0;\n        background-color: #fff;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n      }\n\n      .circle-progress {\n        position: absolute;\n        left: 50;\n        top: 0;\n      }\n    `}</style>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}